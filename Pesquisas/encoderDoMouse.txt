/* Read Quadrature Encoder
* Connect Encoder to Pins encoder0PinA, encoder0PinB, and +5V.
*
* Sketch by max wolf / www.meso.net
* v. 0.1 - very basic functions - mw 20061220
*
*/  
 
 
int val; 
int encoder0PinA = 3;
int encoder0PinB = 4;
int encoder0Pos = 0;
int encoder0PinALast = LOW;
int n = LOW;
 
void setup() { 
    pinMode (encoder0PinA,INPUT);
    pinMode (encoder0PinB,INPUT);
    Serial.begin (115200);
} 
 
void loop() { 
    n = digitalRead(encoder0PinA);
    if ((encoder0PinALast == LOW) && (n == HIGH)) {
        if (digitalRead(encoder0PinB) == LOW) {
            encoder0Pos--;
        } else {
            encoder0Pos++;
        }
        Serial.println(encoder0Pos);
        Serial.println ("/");
    } 
    encoder0PinALast = n;
}

______________________________________________________________________________________
#include <Encoder.h>

// Change these pin numbers to the pins connected to your encoder.
//   Best Performance: both pins have interrupt capability
//   Good Performance: only the first pin has interrupt capability
//   Low Performance:  neither pin has interrupt capability
Encoder knob(5, 6);
//   avoid using pins with LEDs attached

long currentPosition;
const byte mouseMoveAmount = 10; // no idea what the units are for this, so tweak as needed
unsigned long lastMoveMillis;
int mouseReleaseTimer = 500; // time of no encoder move until mouse is released

void setup() {
  Mouse.begin();
  currentPosition = 0;
  knob.write(0);
}

void loop() {
  long newPosition = knob.read();

  if (newPosition != currentPosition) // has encoder position changed?
  {
    lastMoveMillis = millis(); // mark time of this move

    if (!Mouse.isPressed())
      Mouse.press(); // mouse left-button down

    Mouse.move(0, newPosition * mouseMoveAmount, 0); // move mouse up or down depending on direction of turn
  }

  if (millis() - lastMoveMillis > mouseReleaseTimer) // release the mouse and reset knob state to zero if sufficient time has elapsed.
  {
    Mouse.release();
    knob.write(0);
    newPosition = 0;
  } 

  currentPosition = newPosition;
}
______________________________________________________________________________________
